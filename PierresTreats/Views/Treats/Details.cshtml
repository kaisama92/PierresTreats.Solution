@{
  Layout = "_Layout";
}

@using PierresTreats.Models
@model PierresTreats.Models.Treat

<div class="container">
    <h2>Details</h2>
    
    <h3>Details for @Model.TreatName</h3>
    <br>
    
    <h4>@Model.StockQuantity are available.</h4>
    @if (Model.JoinEntities.Count == 0)
    {
      <h4>You haven't assigned any Flavors to this Treat! Click @Html.ActionLink("here", "AddFlavor", new { id = Model.TreatId }) to add a Flavor to this Treat!</h4>
    }
    else
    {
      <h4>Author(s):</h4>
      @foreach (TreatFlavor joinEntity in Model.JoinEntities)
      {
        <li>@Html.ActionLink($"{joinEntity.Flavor.FlavorName}", "Details", "Flavors")</li>
        @using (Html.BeginForm("DeleteJoin", "Books"))
        {
          @Html.Hidden("joinId", @joinEntity.TreatFlavorId)
          <input type="submit" value="Remove" />
        }
      }
    }
    
    <hr>
    <h4>@Html.ActionLink("Add More of this Treat", "AddStock", new { id = Model.TreatId })</h4>
    <br>
    
    <p>@Html.ActionLink("Edit this book", "Edit", new { id = Model.TreatId })</p>
    <p>@Html.ActionLink("Checkout this book", "Checkout", new { id = Model.TreatId })</p>
    <p>@Html.ActionLink("Back to list", "Index")</p>
    <p>@Html.ActionLink("Add a new Flavor Here", "AddFlavor", new { id = Model.TreatId })</p>
</div>